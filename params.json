{"body":"Getting Started With ClickatellBundle\r\n==================================\r\n\r\n[Clickatell](http://www.clickatell.com/)\r\n\r\n## Prerequisites\r\n\r\nThis version of the bundle requires Symfony 2.1+\r\n\r\n### Translations\r\n\r\nIf you wish to use default texts provided in this bundle, you have to make\r\nsure you have translator enabled in your config.\r\n\r\n``` yaml\r\n# app/config/config.yml\r\n\r\nframework:\r\n    translator: ~\r\n```\r\n\r\nFor more information about translations, check [Symfony documentation](http://symfony.com/doc/current/book/translation.html).\r\n\r\n## Installation\r\n\r\nInstallation is a quick 5 step process:\r\n\r\n1. Download ArcherClickatellBundle using composer\r\n2. Enable the Bundle\r\n3. Create your Message class\r\n4. Configure the ArcherClickatellBundle\r\n5. Update your database schema\r\n\r\n### Step 1: Download ArcherClickatellBundle using composer\r\n\r\nAdd ArcherClickatellBundle in your composer.json:\r\n\r\n```js\r\n{\r\n    \"require\": {\r\n        \"archer/clickatell-bundle\": \"dev-master\"\r\n    }\r\n}\r\n```\r\n\r\nNow tell composer to download the bundle by running the command:\r\n\r\n``` bash\r\n$ php composer.phar update archer/clickatell-bundle\r\n```\r\n\r\nComposer will install the bundle to your project's `vendor/archer` directory.\r\n\r\n### Step 2: Enable the bundle\r\n\r\nEnable the bundle in the kernel:\r\n\r\n``` php\r\n<?php\r\n// app/AppKernel.php\r\n\r\npublic function registerBundles()\r\n{\r\n    $bundles = array(\r\n        // ...\r\n        new Archer\\ClickatellBundle\\ArcherClickatellBundle(),\r\n    );\r\n}\r\n```\r\n\r\n### Step 3: Create your Message class\r\n\r\nThe goal of this bundle is to persist some `Message` class to a database (MySql,\r\nMongoDB, CouchDB, etc).\r\n\r\nThe bundle provides base classes which are already mapped for most fields\r\nto make it easier to create your entity. Here is how you use it:\r\n\r\n1. Extend the base `Message` class (the class to use depends of your storage)\r\n2. Map the `id` field. It must be protected as it is inherited from the parent class.\r\n\r\n**Note:**\r\n\r\n> The doc uses a bundle named `AcmeMessageBundle`. If you want to use the same\r\n> name, you need to register it in your kernel. But you can of course place\r\n> your Message class in the bundle you want.\r\n\r\n**Warning:**\r\n\r\n> If you override the __construct() method in your Message class, be sure\r\n> to call parent::__construct(), as the base Message class depends on\r\n> this to initialize some fields.\r\n\r\n**a) Doctrine ORM Message class**\r\n\r\nIf you're persisting your message via the Doctrine ORM, then your `message` class\r\nshould live in the `Entity` namespace of your bundle and look like this to\r\nstart:\r\n\r\n``` php\r\n<?php\r\n// src/Acme/MessageBundle/Entity/Message.php\r\n\r\nnamespace Acme\\MessageBundle\\Entity;\r\n\r\nuse Archer\\ClickatellBundle\\Entity\\Message as BaseMessage;\r\nuse Doctrine\\ORM\\Mapping as ORM;\r\n\r\n/**\r\n * @ORM\\Entity\r\n * @ORM\\Table(name=\"clickatell_message\")\r\n */\r\nclass Message extends BaseMessage\r\n{\r\n    /**\r\n     * @ORM\\Id\r\n     * @ORM\\Column(type=\"integer\")\r\n     * @ORM\\GeneratedValue(strategy=\"AUTO\")\r\n     */\r\n    protected $id;\r\n\r\n    public function __construct()\r\n    {\r\n        parent::__construct();\r\n        // your own logic\r\n    }\r\n}\r\n```\r\n\r\n**b) MongoDB Message class**\r\n**c) CouchDB Message class**\r\n**d) Propel Message class**\r\n\r\n### Step 4: Configure the ArcherClickatell\r\n\r\nAdd the following configuration to your `config.yml` file according to which type\r\nof datastore you are using.\r\n\r\n``` yaml\r\n# app/config/config.yml\r\narcher_clickatell:\r\n    user:                 ~ # your username for clickatell\r\n    password:             ~ # your password for clickatell\r\n    api_id:               ~ # your id for clickatell\r\n    message_class:  Acme\\MessageBundle\\Entity\\Message\r\n```\r\n\r\n\r\n``` xml\r\n# app/config/config.xml\r\n<!-- app/config/config.xml -->\r\n\r\n<archer_clickatell:config\r\n    user=\"username\"\r\n    password=\"password\"\r\n    api-id=\"api_id\"\r\n    message-class=\"Acme\\MessageBundle\\Entity\\Message\"\r\n/>\r\n```\r\n\r\n### Step 5: Update your database schema\r\n\r\nNow that the bundle is configured, the last thing you need to do is update your\r\ndatabase schema because you have added a new entity, the `Message` class which you\r\ncreated in Step 4.\r\n\r\nFor ORM run the following command.\r\n\r\n``` bash\r\n$ php app/console doctrine:schema:update --force\r\n```\r\n\r\n### Usage Steps\r\n\r\n``` php\r\n//send  Sms\r\n$form = $this->get('clickatell.send_message.form');\r\n$form->bind($this->getRequest());\r\nif ($form->isValid()) {\r\n    $message = $form->getData();\r\n    $clickatell = $this->get('clickatell.http');\r\n    $response = $clickatell->sendMessage($message->getToPhone(), $message->getText());\r\n}\r\n```\r\n","tagline":"","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Clickatellbundle"}